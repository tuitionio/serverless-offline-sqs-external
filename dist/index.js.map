{"version":3,"file":"index.js","names":["_clientLambda","require","_clientSqs","_url","_helpers","ServerlessOfflineSQSExternal","constructor","serverless","options","service","commands","hooks","offlineStartInit","bind","offlineStartEnd","streams","getOfflineConfig","_this$service$custom","config","custom","endpoint","getSqsConfig","_this$service$custom2","host","port","https","url","URL","hostname","protocol","getConfig","provider","getClient","sqsConfig","region","credentials","accessKeyId","secretAccessKey","SQS","getProperties","queueEvent","_queueEvent$arn","getAtt","arn","_this$service","_this$service$resourc","_this$service$resourc2","_this$service$resourc3","resourceName","properties","resources","Resources","Properties","Error","Object","entries","map","key","value","isPlainObject","toString","keys","some","k","startsWith","values","cli","log","JSON","stringify","filter","val","isFalsey","reduce","obj","getProperty","propertyName","getQueueName","extractQueueNameFromARN","queueName","eventHandler","functionName","messages","_this$service2","_this$service2$provid","Promise","resolve","streamName","awsRegion","awsAccountId","accountId","eventSourceARN","func","getFunction","env","process","functionEnv","AWS_REGION","environment","event","Records","MessageId","messageId","ReceiptHandle","receiptHandle","Body","body","Attributes","attributes","MessageAttributes","messageAttributes","MD5OfBody","md5OfBody","eventSource","offlineConfg","lambdaConfig","apiVersion","lambda","Lambda","params","FunctionName","name","InvocationType","Payload","invoke","createQueueReadable","client","QueueName","autoCreate","omit","createQueue","QueueUrl","getQueueUrl","replace","next","Messages","receiveMessage","MaxNumberOfMessages","batchSize","AttributeNames","MessageAttributeNames","WaitTimeSeconds","deleteMessageBatch","Entries","Id","err","stack","functions","_function","queues","events","sqs","isEmpty","printBlankLine","forEach","module","exports"],"sources":["../src/index.js"],"sourcesContent":["import { Lambda } from '@aws-sdk/client-lambda';\nimport { SQS } from '@aws-sdk/client-sqs';\nimport { URL } from 'url';\n\nimport {\n  isEmpty,\n  omit,\n  isPlainObject,\n  isFalsey,\n  printBlankLine,\n  extractQueueNameFromARN,\n} from './helpers';\n\nclass ServerlessOfflineSQSExternal {\n  constructor(serverless, options) {\n    this.serverless = serverless;\n    this.service = serverless.service;\n    this.options = options;\n\n    this.commands = {};\n\n    this.hooks = {\n      'before:offline:start': this.offlineStartInit.bind(this),\n      'before:offline:start:init': this.offlineStartInit.bind(this),\n      'before:offline:start:end': this.offlineStartEnd.bind(this),\n    };\n\n    this.streams = [];\n  }\n\n  getOfflineConfig() {\n    const config = this.service.custom?.['serverless-offline'] || {};\n    return {\n      ...config,\n      endpoint: config.endpoint || 'http://localhost:3002',\n    };\n  }\n\n  getSqsConfig() {\n    const config = this.service.custom?.['serverless-offline-sqs-external'] || {};\n    let {\n      endpoint, host = 'localhost', port = 4576, https = false,\n    } = config;\n    if (!endpoint) {\n      endpoint = `${https ? 'https://' : 'http://'}${host}:${port}`;\n    } else {\n      const url = new URL(endpoint);\n      host = url.hostname;\n      port = url.port;\n      https = url.protocol;\n    }\n    return {\n      ...config,\n      host,\n      port,\n      endpoint,\n    };\n  }\n\n  getConfig() {\n    return {\n      ...this.options,\n      ...this.service,\n      ...this.service.provider,\n    };\n  }\n\n  getClient() {\n    const config = this.getSqsConfig();\n    const sqsConfig = {\n      endpoint: config.endpoint,\n      region: config.region,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    };\n    return new SQS(sqsConfig);\n  }\n\n  getProperties(queueEvent) {\n    const getAtt = queueEvent?.arn?.['Fn::GetAtt'];\n    if (getAtt) {\n      const [resourceName] = getAtt;\n      const properties = this.service?.resources?.Resources?.[resourceName]?.Properties;\n      if (!properties) throw new Error(`No resource defined with name ${resourceName}`);\n      return Object.entries(properties)\n        .map(([key, value]) => {\n          if (!isPlainObject(value)) return [key, value.toString()];\n          if (\n            Object.keys(value).some((k) => k === 'Ref' || k.startsWith('Fn::'))\n            || Object.values(value).some(isPlainObject)\n          ) {\n            return this.serverless.cli.log(\n              `WARN ignore property '${key}' in config as it is some cloudformation reference: ${JSON.stringify(\n                value,\n              )}`,\n            );\n          }\n          return [key, JSON.stringify(value)];\n        })\n        .filter((val) => !isFalsey(val))\n        .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\n    }\n    return null;\n  }\n\n  getProperty(queueEvent, propertyName) {\n    const properties = this.getProperties(queueEvent);\n    return properties?.[propertyName] || null;\n  }\n\n  getQueueName(queueEvent) {\n    if (typeof queueEvent === 'string') return extractQueueNameFromARN(queueEvent);\n    if (typeof queueEvent.arn === 'string') return extractQueueNameFromARN(queueEvent.arn);\n    if (typeof queueEvent.queueName === 'string') return queueEvent.queueName;\n\n    const queueName = this.getProperty(queueEvent, 'QueueName');\n    if (!queueName) {\n      throw new Error(\n        'QueueName not found. See https://github.com/CoorpAcademy/serverless-plugins/tree/master/packages/serverless-offline-sqs#functions',\n      );\n    }\n    return queueName;\n  }\n\n  async eventHandler(queueEvent, functionName, messages) {\n    if (!messages) return Promise.resolve();\n\n    const streamName = this.getQueueName(queueEvent);\n    this.serverless.cli.log(`${streamName} (Î»: ${functionName})`);\n\n    const config = this.getConfig();\n    const awsRegion = config.region || 'us-east-1';\n    const awsAccountId = config.accountId || '000000000000';\n    const eventSourceARN = typeof queueEvent.arn === 'string'\n      ? queueEvent.arn\n      : `arn:aws:sqs:${awsRegion}:${awsAccountId}:${streamName}`;\n\n    const func = this.service.getFunction(functionName);\n\n    const { env } = process;\n    const functionEnv = {\n      ...({ AWS_REGION: awsRegion }),\n      ...(env || {}),\n      ...(this?.service?.provider?.environment || {}),\n      ...(func?.environment || {}),\n    };\n\n    process.env = functionEnv;\n\n    const event = {\n      Records: messages.map(\n        ({\n          MessageId: messageId,\n          ReceiptHandle: receiptHandle,\n          Body: body,\n          Attributes: attributes,\n          MessageAttributes: messageAttributes,\n          MD5OfBody: md5OfBody,\n        }) => ({\n          messageId,\n          receiptHandle,\n          body,\n          attributes,\n          messageAttributes,\n          md5OfBody,\n          eventSource: 'aws:sqs',\n          eventSourceARN,\n          awsRegion,\n        }),\n      ),\n    };\n\n    const offlineConfg = this.getOfflineConfig();\n    const lambdaConfig = {\n      apiVersion: '2015-03-31',\n      endpoint: offlineConfg.endpoint,\n      region: awsRegion,\n      credentials: {\n        accessKeyId: 'foo',\n        secretAccessKey: 'bar',\n      },\n    };\n    const lambda = new Lambda(lambdaConfig);\n\n    const params = {\n      FunctionName: func.name,\n      InvocationType: 'Event',\n      Payload: JSON.stringify(event),\n    };\n\n    await lambda.invoke(params);\n\n    process.env = env;\n    return null;\n  }\n\n  async createQueueReadable(functionName, queueEvent) {\n    const client = this.getClient();\n    const QueueName = this.getQueueName(queueEvent);\n    this.serverless.cli.log(`Queue Name: ${QueueName}`);\n\n    const sqsConfig = this.getSqsConfig();\n    if (sqsConfig.autoCreate) {\n      const properties = this.getProperties(queueEvent);\n      const params = {\n        QueueName,\n        Attributes: omit(['QueueName'], properties),\n      };\n      await client.createQueue(params);\n    }\n\n    let { QueueUrl } = await client.getQueueUrl({ QueueName });\n    QueueUrl = QueueUrl.replace('localhost', sqsConfig.host);\n\n    const next = async () => {\n      const { Messages } = await client.receiveMessage(\n        {\n          QueueUrl,\n          MaxNumberOfMessages: queueEvent.batchSize,\n          AttributeNames: ['All'],\n          MessageAttributeNames: ['All'],\n          WaitTimeSeconds: 20,\n        },\n      );\n\n      if (Messages) {\n        try {\n          await this.eventHandler(queueEvent, functionName, Messages);\n\n          await client.deleteMessageBatch(\n            {\n              Entries: (Messages || []).map(({ MessageId: Id, ReceiptHandle }) => ({\n                Id,\n                ReceiptHandle,\n              })),\n              QueueUrl,\n            },\n          );\n        } catch (err) {\n          this.serverless.cli.log(err.stack);\n        }\n      }\n\n      next();\n    };\n\n    next();\n  }\n\n  offlineStartInit() {\n    this.serverless.cli.log('Starting Offline SQS.');\n\n    Object.entries(this.service.functions).map(([functionName, _function]) => {\n      const queues = (_function?.events || [])\n        .filter((event) => event?.sqs)\n        .map((event) => event.sqs);\n\n      if (!isEmpty(queues)) {\n        printBlankLine();\n        this.serverless.cli.log(`SQS for ${functionName} (exposed as ${_function.name}):`);\n      }\n\n      queues.forEach((queueEvent) => {\n        this.createQueueReadable(functionName, queueEvent);\n      });\n\n      if (!isEmpty(queues)) {\n        printBlankLine();\n      }\n      return null;\n    });\n  }\n\n  offlineStartEnd() {\n    this.serverless.cli.log('offline-start-end');\n  }\n}\n\nmodule.exports = ServerlessOfflineSQSExternal;\n"],"mappings":"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","ignoreList":[]}